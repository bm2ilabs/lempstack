#!/bin/bash

######################################################################
#           Auto Install & Optimize LEMP Stack on CentOS 7, 8        #
#                                                                    #
#                Author: Sanvv - HOSTVN Technical                    #
#                  Website: https://hostvn.vn                        #
#                                                                    #
#              Please do not remove copyright. Thank!                #
#  Please do not copy under any circumstance for commercial reason!  #
######################################################################

# Set link
SCRIPT_LINK="$(PWD)"

# VPS Info

OS_VER=$(rpm -E %centos)
RAM_TOTAL=$(awk '/MemTotal/ {print $2}' /proc/meminfo)
LOW_RAM='470000'

# Control Panel path
CPANEL="/usr/local/cpanel/cpanel"
DIRECTADMIN="/usr/local/directadmin/custombuild/build"
PLESK="/usr/local/psa/version"
WEBMIN="/etc/init.d/webmin"
SENTORA="/root/passwords.txt"
HOCVPS="/etc/hocvps/scripts.conf"
VPSSIM="/home/vpssim.conf"
EEV3="/usr/local/bin/ee"
WORDOPS="/usr/local/bin/wo"
KUSANAGI="/home/kusanagi"
CWP="/usr/local/cwpsrv"
VESTA="/usr/local/vesta/"
EEV4="/opt/easyengine"
LARVPS="/etc/larvps/.info.conf"
TINO="/opt/tinopanel"

# Set Lang
ROOT_ERR="You can run the script with the root user. Run the command \"sudo su\" for root access!"
CANCEL_INSTALL="Cancel the installation ..."
OS_WRONG="Script just works on \"CentOS 7\" or \"CentOS 8\"!"
RAM_NOT_ENOUGH="Warning: RAM is too low to install the script. (At least 512MB)"
OTHER_CP_EXISTS="Your server has another Control Panel installed. Please rebuild to install the Script."
HOSTVN_EXISTS="Your server has HOSTVN Script installed. Please rebuild if you want to reinstall."

# Set Color
RED='\033[0;31m'
NC='\033[0m'

welcome(){
    clear
    printf "========================================================\n"
    echo   "                   HOSTVN.VN Scripts                     "
    echo   "     Auto Install & Optimize LEMP Stack on CentOS 7, 8    "
    printf " If you need assistance, please contact %s\n" "kythuat@hostvn.net"
    printf "========================================================\n"
    echo ""
    echo "Prepare to install..."
    sleep 3
}

###################
#Check conditions #
###################

# Check if user not root
check_root(){
    if [[ "$(id -u)" != "0" ]]; then
        printf "${RED}%s${NC}\n" "${ROOT_ERR}"
        printf "${RED}%s${NC}\n" "${CANCEL_INSTALL}"
        exit
    fi
}

# Check if not enough ram
check_low_ram(){
    if [[ ${RAM_TOTAL} -lt ${LOW_RAM} ]]; then
        printf "${RED}%s${NC}\n" "${RAM_NOT_ENOUGH}"
        printf "${RED}%s${NC}\n" "${CANCEL_INSTALL}"
        exit
    fi
}

# Check if other Control Panel has installed before
check_control_panel(){
    if [[ -f "${CPANEL}" || -f "${DIRECTADMIN}" || -f "${PLESK}" || -f "${WEBMIN}" || -f "${SENTORA}" || -f "${HOCVPS}" || -f "${LARVPS}" ]]; then
        printf "${RED}%s${NC}\n" "${OTHER_CP_EXISTS}"
        printf "${RED}%s${NC}\n" "${CANCEL_INSTALL}"
        exit
    fi

    if [[ -f "${VPSSIM}" || -f "${WORDOPS}" || -f "${EEV3}" || -d "${EEV4}" || -d "${VESTA}" || -d "${CWP}" || -d "${KUSANAGI}" || -d "${TINO}" ]]; then
        printf "${RED}%s${NC}\n" "${OTHER_CP_EXISTS}"
        printf "${RED}%s${NC}\n" "${CANCEL_INSTALL}"
        exit
    fi

    if [[ -f "/etc/hostvn.lock" ]]; then
        printf "${RED}%s${NC}\n" "${HOSTVN_EXISTS}"
        printf "${RED}%s${NC}\n" "${CANCEL_INSTALL}"
        exit
    fi
}

check_before_install(){
    echo ""
    check_root
    check_low_ram
    check_control_panel
}

###################
# Prepare Install #
###################

# Remove unnecessary services
remove_old_ervice(){
    yum -y remove mysql* php* httpd* sendmail* postfix* rsyslog* nginx*
    yum clean all
}

# Install requirement service
install_repo(){
    if [[ "${OS_VER}" -eq 8 ]]; then
        dnf -y install epel-release -y
        dnf -y install https://rpms.remirepo.net/enterprise/remi-release-8.rpm -y
        dnf -y install hostname libsepol boost-program-options libmemcached libmemcached-devel
    elif [ "${OS_VER}" -eq 7 ]; then
        yum -y install epel-release ntpdate libmemcached libmemcached-devel
        yum install http://rpms.remirepo.net/enterprise/remi-release-7.rpm -y
    else
        printf "${RED}${OS_WRONG}${NC}\n"
        sleep 2
        exit
    fi
}

install_requirement(){
    yum -y install gawk bc wget tar gcc gcc-c++ flex bison make bind bind-libs bind-utils dos2unix openssl openssl-devel perl quota libaio \
          libcom_err-devel libcurl-devel gd jpegoptim zlib-devel zip unzip libcap-devel cronie bzip2 cyrus-sasl-devel perl-ExtUtils-Embed logrotate \
          autoconf automake libtool which patch mailx bzip2-devel lsof glibc-headers kernel-devel expat-devel nano htop git syslog-ng syslog-ng-libdbi \
          psmisc net-tools systemd-devel libdb-devel perl-DBI pngquant libpng-devel xfsprogs rsyslog crontabs file kernel-headers
}

create_swap(){
    swap="$(swapon -s)"
    if [[ -z "${swap}" && ${RAM_TOTAL} -le 2099152 ]]; then
        fallocate -l 1G /swapfile
        chmod 600 /swapfile
        mkswap /swapfile
        swapon /swapfile
        echo "/swapfile   none    swap    sw    0   0" >> /etc/fstab
    fi
}

disable_firewalld(){
    systemctl stop firewalld
    systemctl disable firewalld
}


set_locale(){
    export LC_ALL="en_US.UTF-8"
    export LC_CTYPE="en_US.UTF-8"
}

#########################
#Dowload primary Script #
#########################
dowload_script(){
    curl -sO ${SCRIPT_LINK}/hostvn && dos2unix hostvn &> /dev/null && chmod +x hostvn && sh hostvn
}

welcome
check_before_install
remove_old_ervice
install_repo
install_requirement
create_swap
disable_firewalld
set_locale
dowload_script