#!/bin/bash

######################################################################
#           Auto Install & Optimize LEMP Stack on CentOS 7, 8        #
#                                                                    #
#                Author: Sanvv - HOSTVN Technical                    #
#                  Website: https://hostvn.vn                        #
#                                                                    #
#              Please do not remove copyright. Thank!                #
#  Please do not copy under any circumstance for commercial reason!  #
######################################################################

# shellcheck disable=SC2154
# shellcheck disable=SC2207
# shellcheck disable=SC2034

source /var/hostvn/menu/validate/rule

cd_dir(){
    cd "$1" || exit
}

bytes_for_humans(){
    #https://stackoverflow.com/a/30872711
    local -i bytes=$1;
    if [[ $bytes -lt 1024 ]]; then
        echo "${bytes}B"
    elif [[ $bytes -lt 1048576 ]]; then
        echo "$(( (bytes + 1023)/1024 ))MB"
    else
        echo "$(( (bytes + 1048575)/1048576 ))GB"
    fi
}

gen_pass(){
    < /dev/urandom tr -dc A-Za-z0-9 | head -c16
}

select_domain(){
    domain=""
    #https://www.cyberciti.biz/faq/linux-unix-shell-check-if-directory-empty/
    if [[ "$(ls -A "${USER_DIR}")" ]]; then
        echo "${LIST_DOMAIN}"
        domains=()
        cd_dir "${USER_DIR}"
        #https://stackoverflow.com/a/2437466
        #https://stackoverflow.com/a/1951523
        #https://stackoverflow.com/a/46882842
        for entry in .*.conf; do
            domain=${entry/.}
            domain=${domain//.conf}
            domains+=("${domain}")
        done
        PS3="${INPUT_SELECT} [0 = Exit] "
        select opt in "${domains[@]}"
        do
            domain=$opt
            break
        done
    else
        ALERT=$(printf "%s\n" "${RED}${EMPTY_DOMAIN}${NC}")
    fi
}

# Select Source
select_source(){
    SOURCE="Other"
    echo "${SELECT_SOURCE}"
    PS3="${INPUT_SELECT}"
    options=("WordPress" "Laravel" "CodeIgniter" "Xenforo" "Joomla" "Drupal" "OpenCart" "WHMCS" "PrestaShop" "Yii" "Discuz" "Ecshop" "Other")
    select opt in "${options[@]}"
    do
        case $opt in
            "WordPress") SOURCE="wordpress"; break;;
            "Laravel") SOURCE="laravel"; break;;
            "CodeIgniter") SOURCE="codeigniter"; break;;
            "Xenforo") SOURCE="xenforo"; break;;
            "Joomla") SOURCE="joomla"; break;;
            "Drupal") SOURCE="drupal"; break;;
            "OpenCart") SOURCE="opencart"; break;;
            "WHMCS") SOURCE="whmcs"; break;;
            "PrestaShop") SOURCE="prestashop"; break;;
            "Yii") SOURCE="yii"; break;;
            "Discuz") SOURCE="discuz"; break;;
            "Ecshop") SOURCE="ecshop"; break;;
            "Other") SOURCE="default"; break;;
            *) printf "%s\n" "${RED}${WRONG_SELECT}${NC}";;
        esac
    done
}

set_rewrite(){
    if [ "${SOURCE}" == "wordpress" ]; then
        rewrite="include /etc/nginx/rewrite/wordpress.conf;"
        wp_secure="include /etc/nginx/wordpress/wordpress_secure.conf;"
    elif [ "${SOURCE}" == "laravel" ]; then
        rewrite="include /etc/nginx/rewrite/laravel.conf;"
    elif [ "${SOURCE}" == "codeigniter" ]; then
        rewrite="include /etc/nginx/rewrite/codeigniter.conf;"
    elif [ "${SOURCE}" == "xenforo" ]; then
        rewrite="include /etc/nginx/rewrite/xenforo.conf;"
    elif [ "${SOURCE}" == "joomla" ]; then
        rewrite="include /etc/nginx/rewrite/joomla.conf;"
    elif [ "${SOURCE}" == "drupal" ]; then
        rewrite="include /etc/nginx/rewrite/drupal.conf;"
    elif [ "${SOURCE}" == "opencart" ]; then
        rewrite="include /etc/nginx/rewrite/opencart.conf;"
    elif [ "${SOURCE}" == "whmcs" ]; then
        rewrite="include /etc/nginx/rewrite/whmcs.conf;"
    elif [ "${SOURCE}" == "prestashop" ]; then
        rewrite="include /etc/nginx/rewrite/prestashop.conf;"
    elif [ "${SOURCE}" == "yii" ]; then
        rewrite="include /etc/nginx/rewrite/yii.conf;"
    elif [ "${SOURCE}" == "discuz" ]; then
        rewrite="include /etc/nginx/rewrite/discuz.conf;"
    elif [ "${SOURCE}" == "ecshop" ]; then
        rewrite="include /etc/nginx/rewrite/ecshop.conf;"
    else
        rewrite="include /etc/nginx/rewrite/default.conf;"
    fi
}

fastcgi(){
    fastcgi_pass="unix:/var/run/php-fpm/${username}.sock;"

    if [[ "${php_mode}" == "2" ]]; then
        fastcgi_pass="unix:/opt/remi/${php2_version}/root/var/run/php-fpm/${username}.sock;"
    fi
}

restart_service(){
    systemctl restart nginx.service
    systemctl restart php-fpm.service
    if [ "${php2_release}" == "yes" ]; then
        systemctl restart "${php2_version}"-php-fpm
    fi
}

make_backup_dir(){
    if [[ ! -d "/home/backup/${CURRENT_DATE}/${1}" ]]; then
        mkdir -p /home/backup/"${CURRENT_DATE}"/"${1}"
    fi
}

list_backup(){
    date=""
    #https://www.cyberciti.biz/faq/linux-unix-shell-check-if-directory-empty/
    if [[ "$(ls -A /home/backup)" ]]; then
        echo "${LIST_BACKUP}"
        dates=()
        cd_dir /home/backup
        for date in * ; do
            if valid_date "${date}"; then
                dates+=("${date}")
            fi
        done

        PS3="${SELECT_OPTION}"
        select opt1 in "${dates[@]}"
        do
            case $opt1 in
            $opt1) date=${opt1}; break;;
            esac
        done

        if [ -n "${date}" ]; then
            echo "Chon ten mien muon khoi phuc [0 = Exit]: "
            domains=()
            cd_dir /home/backup/"${date}"
            for entry in * ; do
                if [ -d "${entry}" ]; then
                    domains+=("${entry}")
                fi
            done

            PS3="${SELECT_OPTION}"
            select opt2 in "${domains[@]}"
            do
                domain=${opt2}
                break
            done
        fi
    else
        ALERT=$(printf "%s\n" "${RED}${BACKUP_EMPTY}${NC}")
    fi
}

empty_db(){
    tables=$(mysql "${db_name}" -e 'show tables' | awk '{ print $1}' | grep -v '^Tables')
    for t in ${tables}
    do
        mysql "${db_name}" -e "drop table ${t}"
    done
}

select_plugin_cache(){
    plugins_cache="other"
    echo "${SELECT_PLUGINS_CACHE}"
    PS3="${INPUT_SELECT}"
    options=("W3 Total Cache" "WP Fastest Cache" "WP Rocket" "WP Super Cache" "Cache Enabler" "Swift Performance - PHP Caching Mode" "Swift Performance - Rewrite Caching Mode" "Other")
    select opt in "${options[@]}"
    do
        case $opt in
            "W3 Total Cache") plugins_cache="w3c"; break;;
            "WP Fastest Cache") plugins_cache="wpfc"; break;;
            "WP Rocket") plugins_cache="wprocket"; break;;
            "WP Super Cache") plugins_cache="wpsc"; break;;
            "Cache Enabler") plugins_cache="enabler"; break;;
            "Swift Performance - PHP Caching Mode") plugins_cache="swift1"; break;;
            "Swift Performance - Rewrite Caching Mode") plugins_cache="swift2"; break;;
            "Other") plugins_cache="other"; break;;
            *) printf "%s\n" "${RED}${WRONG_SELECT}${NC}";;
        esac
    done
}

select_plugin_seo(){
    plugins_seo=""
    echo "${SELECT_PLUGINS_SEO}"
    PS3="${INPUT_SELECT}"
    options=("Yoast Seo" "Rank Math Seo" "Other")
    select opt in "${options[@]}"
    do
        case $opt in
            "Yoast Seo") plugins_seo="yoast_seo"; break;;
            "Rank Math Seo") plugins_seo="rank_math_seo"; break;;
            "Other") plugins_seo=""; break;;
            *) printf "%s\n" "${RED}${WRONG_SELECT}${NC}";;
        esac
    done
}

wp_auto_install_info(){
    while true
    do
        echo "Username does not contain special characters and must be 5 characters in length."
        read -r -p "${INPUT_WP_ADMIN}" admin_user
        LEN=${#admin_user}
        echo
        if validate_user "${admin_user}" && [[ $LEN -ge 5 ]]; then
            break
        else
            clear
            printf "%s\n" "${RED}${WRONG_USERNAME}${NC}"
        fi
    done

    admin_pwd=$(gen_pass "$@")

    while true
    do
        read -r -p "${INPUT_EMAIL}" admin_email
        echo
        if [[ "${admin_email}" =~ ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$ ]]; then
            break
        else
            clear
            printf "%s\n"  "${RED}${WRONG_EMAIL}${NC}"
        fi
    done

    read -r -p "${INPUT_SITE_NAME}" site_name

    if [ -z "${admin_user}" ]; then
        admin_user="admin"
    fi

    if [ -z "${site_name}" ]; then
        site_name="Just another WordPress site"
    fi
}

brute_force_wp(){
    brute="location = /wp-login.php {
        limit_req zone=two burst=1 nodelay;
        include /etc/nginx/fastcgi_params;
        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;
        fastcgi_pass php-${1};
    }"
}

select_remote(){
    echo "${SELECT_REMOTE}"
    remotes=()
    list_remote=( $(rclone listremotes) )
    for entry in "${list_remote[@]}"; do
        rt=${entry//:}
        remotes+=("${rt}")
    done

    PS3="${SELECT_OPTION}"

    select opt in "${remotes[@]}"
    do
        case $opt in
            $opt) remote=${opt}; break ;;
        esac
    done
}

doc_root(){
    if [[ "${1}" == "laravel" ]]; then
        root="root /home/${2}/${3}/public_html/public;"
    else
        root="root /home/${2}/${3}/public_html;"
    fi
}