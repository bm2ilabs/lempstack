#!/bin/bash

######################################################################
#           Auto Install & Optimize LEMP Stack on CentOS 7, 8        #
#                                                                    #
#                Author: Sanvv - HOSTVN Technical                    #
#                  Website: https://hostvn.vn                        #
#                                                                    #
#              Please do not remove copyright. Thank!                #
#  Please do not copy under any circumstance for commercial reason!  #
######################################################################

# shellcheck disable=SC2154
# shellcheck disable=SC1091
source /var/hostvn/menu/helpers/function

set_var(){
    #https://www.howtoforge.com/tutorial/linux-grep-command/
    #https://stackoverflow.com/a/6284370
    username=$(grep -w "username" "${USER_DIR}/.${domain}.conf" | cut -f2 -d'=')
    db_name=$(grep -w "db_name" "${USER_DIR}/.${domain}.conf" | cut -f2 -d'=')
}

confirm_restore_all(){
    while true
    do
        read -r -p "You want to recover data? (y/n) " promt_restore_all
        echo
        if [[ "${promt_restore_all}" =~ ^([yY])$ || "${promt_restore_all}" =~ ^([nN])$ ]]; then
            break
        else
            printf "%s\n"  "${RED}Value is not correct. Please re-enter.${NC}"
        fi
    done
}

_restore_source(){
    if [[ ! -d "/home/${username}/${domain}/public_html" ]]; then
        mkdir -p /home/"${username}"/"${domain}"/public_html
    fi
    rm -rf /home/"${username}"/"${domain}"/public_html/*
    tar xvzf /home/backup/"${date}"/"${domain}"/"${domain}".tar.gz -C /home/"${username}"/"${domain}"/
    chown -R "${username}":"${username}" /home/"${username}"
}

_restore_db(){
    cd_dir /home/backup/"${date}"/"${domain}"
    mysql -uadmin -p"${mysql_pwd}" "${db_name}" < "${db_name}".sql
}

_run(){
    set_var
    if if_is_wordpress "$username" "$domain"; then
        printf "%s\n" "${GREEN}Web site using WordPress. Please use the WordPress Management Menu to restore.${NC}"
    else
        check_backup_exists "${date}" "${domain}"

        if ! check_backup_empty "${date}" "${domain}";
        then
            ALERT="${RED}This domain has no backup.${NC}\n"
        fi

        if [ ! -f "/home/backup/${date}/${domain}/${domain}.tar.gz" ]; then
            ALERT="${RED}This domain has no backup.${NC}\n"
        fi

        if [ ! -f "/home/backup/${date}/${domain}/${db_name}.sql" ]; then
            ALERT="${RED}This domain has no backup.${NC}\n"
        fi

        if [ -z "${ALERT}" ]; then
            _restore_source
            empty_db
            _restore_db
            clear
            printf "%s\n" "${GREEN}Successful data recovery.${NC}"
        else
            clear
            printf "%s\n" "${ALERT}"
        fi
    fi
}

if [[ $(ls -A "${USER_DIR}") ]]; then
    promt_restore_all=""
    date=""
    domain=""
    ALERT=""

    confirm_restore_all
    if [[ "${promt_restore_all}" =~ ^([yY])$ ]]; then
        list_backup
        if [ -z "${date}" ]; then
            clear
            printf "%s\n" "${RED}You have chosen to cancel data recovery.${NC}"
        else
            if [ -z "${domain}" ]; then
                clear
                printf "%s\n" "${RED}You have chosen to cancel data recovery.${NC}"
            else
                _run
            fi
        fi
    else
        clear
        printf "%s\n" "${RED}You have chosen to cancel data recovery.${NC}"
    fi
else
    printf "%s\n" "${RED}There are no domain names on VPS.${NC}"
fi

select_restore
