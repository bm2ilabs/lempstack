#!/bin/bash

######################################################################
#           Auto Install & Optimize LEMP Stack on CentOS 7, 8        #
#                                                                    #
#                Author: Sanvv - HOSTVN Technical                    #
#                  Website: https://hostvn.vn                        #
#                                                                    #
#              Please do not remove copyright. Thank!                #
#  Please do not copy under any circumstance for commercial reason!  #
######################################################################

source /var/hostvn/menu/helpers/function

select_time(){
    echo "Choose time?"
    PS3='Enter your choice (1-4): '
    options=("Backup 1 times/day" "Backup 1 times/week" "Backup 1 times/month" "Backup 1 times/year" "Cancel creating cronjob")
    select opt in "${options[@]}"
    do
        case $opt in
            "Backup 1 times/day") time="@midnight"; break;;
            "Backup 1 times/week") time="@weekly"; break;;
            "Backup 1 times/month") time="@monthly"; break;;
            "Backup 1 times/year") time="@yearly"; break;;
            "Cancel creating cronjob") time="0"; break;;
            *) printf "%s\n" "${RED}You entered incorret choice, please re-enter.${NC}";;
        esac
    done
}

input_backup_num(){
    echo "Enter the number of backups you want to store: "
    echo "Example: 14 - Save the latest 14 backup boards - Older friends will be deleted"

    while true
    do
        read -r -p "Enter your selection [0 = Exit]:" backup_num
        echo
        if [[ "${backup_num}" =~ ^[0-9]+$ ]]; then
            break
        else
            printf "%s\n"  "${RED}Value is not correct. Please re-enter.${NC}"
        fi
    done
}

set_backup_num(){
    input_backup_num
    if [[ "${time}" == "@weekly" ]]; then
        backup_num=$((backup_num*7))
    elif [[ "${time}" == "@monthly" ]]; then
        backup_num=$((backup_num*30))
    elif [[ "${time}" == "@yearly" ]]; then
        backup_num=$((backup_num*365))
    else
        backup_num="${backup_num}"
    fi

    sed -i '/backup_num=/d' "${FILE_INFO}"
    echo "backup_num=${backup_num}" >> "${FILE_INFO}"
}

create_cron(){
    crontab -l > backuplocal
    echo "${time} /var/hostvn/menu/cronjob/backup_local.sh >/dev/null 2>&1" >> backuplocal
    crontab backuplocal
    rm -rf backuplocal
    clear
    printf "%s\n" "${GREEN}cronjob created successfully.${NC}"
}

_run(){
    select_time
    if [ "${time}" == "0" ]; then
        clear
        printf "%s\n" "${RED}Cancel creating cronjob.${NC}"
    else
        set_backup_num
        if [ "${backup_num}" == "0" ]; then
            clear
            printf "%s\n" "${RED}Cancel creating cronjob.${NC}"
        else
            create_cron
        fi
    fi
}

time=""
backup_num=""
cron_exists=$(crontab -l | grep -w 'backup_local')

if [ -z "${cron_exists}" ]; then
    _run
else
    clear
    printf "%s\n" "${RED}Cronjob already exist.${NC}"
fi
menu_cronjob