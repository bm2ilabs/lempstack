#!/bin/bash

######################################################################
#           Auto Install & Optimize LEMP Stack on CentOS 7, 8        #
#                                                                    #
#                Author: Sanvv - HOSTVN Technical                    #
#                  Website: https://hostvn.vn                        #
#                                                                    #
#              Please do not remove copyright. Thank!                #
#  Please do not copy under any circumstance for commercial reason!  #
######################################################################

# shellcheck disable=SC2154
# shellcheck disable=SC2207
# shellcheck disable=SC1091
source /var/hostvn/menu/helpers/function
# shellcheck disable=SC1091
source /var/hostvn/menu/helpers/variable_php

confirm(){
    while true
    do
        read -r -p "Ban co muon thay doi phien ban PHP mac dinh khong ? (y/n) " prompt_php1
        echo
        if [[ "${prompt_php1}" =~ ^([yY])$ || "${prompt_php1}" =~ ^([nN])$ ]];
        then
            break
        else
            printf "%s\n" "${RED}The value you entered is not correct. Please re-enter.${NC}"
        fi
    done
}

set_var(){
    OS_VER=$(rpm -E %centos)
    PECL_PHP_LINK="https://pecl.php.net/get"
    #https://www.howtoforge.com/tutorial/linux-grep-command/
    #https://stackoverflow.com/a/6284370
    IGBINARY_VERSION=$(curl -s "${UPDATE_LINK}"/version | grep -w "igbinary_version" | cut -f2 -d'=')
    PHP_MEMCACHED_VERSION=$(curl -s "${UPDATE_LINK}"/version | grep -w "php_memcached_version" | cut -f2 -d'=')
    PHP_REDIS_VERSION=$(curl -s "${UPDATE_LINK}"/version | grep -w "php_redis_version" | cut -f2 -d'=')
    PHP_LIST=( $(curl -s "${UPDATE_LINK}"/version | grep -w "php_list" | cut -f2 -d'=') )
    if [[ "${OS_VER}" -eq 8 ]]; then
        index=0
        for keyword in "${PHP_LIST[@]}"; do
            if [[ "$keyword" = "php7.1" || "$keyword" = "php7.0" || "$keyword" = "php5.6" ]]; then
                unset "PHP_LIST[$index]"
            fi
            (( index++ ))
        done
    fi
}

check_duplicate_php(){
    if [[ "${php1_new}" == "${php1_version}" ]]; then
        ALERT=$(printf "%s\n" "${RED}Phien ban PHP mac dinh ban muon thay doi giong phien ban hien tai. Cancel cai dat.${NC}")
    fi

    if [[ "${php2_release}" == "yes" && "${php1_new}" == "${php2_version}" ]]; then
        ALERT=$(printf "%s\n" "${RED}Phien ban PHP mac dinh ban chon giong phien ban PHP 2. Cancel cai dat.${NC}")
    fi
}

select_php_ver(){
    clear
    printf "Choosephien ban PHP mac dinh\n"
    PS3="Enter your selection [0 = Exit]: "
    select opt in "${PHP_LIST[@]}"
    do
        case $opt in
            "${opt}") php1_new="${opt/.}"; break;;
        esac
    done
}

remove_old_php(){
    yum -y remove php php-fpm php-ldap php-zip php-embedded php-cli php-mysql php-common php-gd php-xml php-mbstring \
        php-mcrypt php-pdo php-soap php-json php-simplexml php-process php-curl php-bcmath php-snmp php-pspell php-gmp \
        php-intl php-imap php-enchant php-pear php-zlib php-xmlrpc php-devel \
        php-tidy php-opcache php-cli php-pecl-zip php-dom php-ssh2 php-xmlreader php-date php-exif php-filter php-ftp \
        php-hash php-iconv php-libxml php-pecl-imagick php-mysqlnd php-openssl php-pcre php-posix php-sockets php-spl \
        php-tokenizer php-bz2 php-pgsql php-sqlite3 php-fileinfo
}

install_php(){
    if [ "${OS_VER}" -eq 8 ]; then
        # New version
        php1_new_cent8=${php1_new//php}
        php1_new_cent8=$(echo "${php1_new_cent8}" | fold -w1 | paste -sd'.')

        # Current version
        php1_version=${php1_version//php}
        php1_version=$(echo "${php1_version}" | fold -w1 | paste -sd'.')

        dnf module reset php:remi-"${php1_version}" -y
        dnf module enable php:remi-"${php1_new_cent8}" -y
        dnf config-manager --set-enabled PowerTools
    else
        yum-config-manager --disable remi-"${php1_version}"
        yum-config-manager --enable remi-"${php1_new}"
    fi

    yum -y install php php-fpm php-ldap php-zip php-embedded php-cli php-mysql php-common php-gd php-xml php-mbstring \
        php-mcrypt php-pdo php-soap php-json php-simplexml php-process php-curl php-bcmath php-snmp php-pspell php-gmp \
        php-intl php-imap php-enchant php-pear php-zlib php-xmlrpc php-devel \
        php-tidy php-opcache php-cli php-pecl-zip php-dom php-ssh2 php-xmlreader php-date php-exif php-filter php-ftp \
        php-hash php-iconv php-libxml php-pecl-imagick php-mysqlnd php-openssl php-pcre php-posix php-sockets php-spl \
        php-tokenizer php-bz2 php-pgsql php-sqlite3 php-fileinfo
}

# Install igbinary
install_igbinary(){
    if [[ "${php1_new}" == "php56" ]]; then
        IGBINARY_VERSION="2.0.8"
    fi

    cd_dir /root && wget "${PECL_PHP_LINK}"/igbinary-"${IGBINARY_VERSION}".tgz
    tar -xvf igbinary-"${IGBINARY_VERSION}".tgz
    cd_dir "/root/igbinary-${IGBINARY_VERSION}"
    /usr/bin/phpize && ./configure --with-php-config=/usr/bin/php-config
    make && make install
    cd /root && rm -rf igbinary-"${IGBINARY_VERSION}" igbinary-"${IGBINARY_VERSION}".tgz

    if [[ -f "/usr/lib64/php/modules/igbinary.so" ]]; then
        if [[ -f "/etc/php.d/40-igbinary.ini" ]]; then
            rm -rf /etc/php.d/40-igbinary.ini
        fi
        cat >> "/etc/php.d/40-igbinary.ini" << EOF
extension=igbinary.so
EOF
    fi
}

install_php_memcached(){
    if [[ "${php1_new}" == "php56" ]]; then
        PHP_MEMCACHED_VERSION="2.2.0"
    fi

    cd /root && wget "${PECL_PHP_LINK}"/memcached-"${PHP_MEMCACHED_VERSION}".tgz
        tar -xvf memcached-"${PHP_MEMCACHED_VERSION}".tgz
        cd_dir "/root/memcached-${PHP_MEMCACHED_VERSION}"
        /usr/bin/phpize && ./configure --enable-memcached-igbinary --with-php-config=/usr/bin/php-config
        make && make install
        cd /root && rm -rf memcached-"${PHP_MEMCACHED_VERSION}".tgz memcached-"${PHP_MEMCACHED_VERSION}"

    if [[ -f "/usr/lib64/php/modules/memcached.so" ]]; then
        if [[ -f "/etc/php.d/50-memcached.ini" ]]; then
            rm -rf /etc/php.d/50-memcached.ini
        fi
        cat >> "/etc/php.d/50-memcached.ini" << EOF
extension=memcached.so
EOF
    fi
}

install_php_redis(){
    if [[ "${php1_new}" == "php56" ]]; then
        PHP_REDIS_VERSION="4.3.0"
    fi

    cd /root && wget "${PECL_PHP_LINK}"/redis-"${PHP_REDIS_VERSION}".tgz
    tar -xvf redis-"${PHP_REDIS_VERSION}".tgz
    cd_dir "/root/redis-${PHP_REDIS_VERSION}"
    /usr/bin/phpize && ./configure --enable-redis-igbinary --with-php-config=/usr/bin/php-config
    make && make install
    cd /root && rm -rf redis-"${PHP_REDIS_VERSION}".tgz redis-"${PHP_REDIS_VERSION}"

    if [[ -f "/usr/lib64/php/modules/redis.so" ]]; then
        if [[ -f "/etc/php.d/50-redis.ini" ]]; then
            rm -rf /etc/php.d/50-redis.ini
        fi
        cat >> "/etc/php.d/50-redis.ini" << EOF
extension=redis.so
EOF
    fi
}

php_global_config(){
    php_parameter
    if [[ -f "/etc/php-fpm.conf" ]]; then
        rm -rf /etc/php-fpm.conf
    fi
    if [[ ! -d "/var/run/php-fpm" ]]; then
        mkdir -p /var/run/php-fpm
    fi
    cat >> "/etc/php-fpm.conf" << EOphp_fpm_conf
;;;;;;;;;;;;;;;;;;;;;
; FPM Configuration ;
;;;;;;;;;;;;;;;;;;;;;

include=/etc/php-fpm.d/*.conf

[global]
pid = /var/run/php-fpm/php-fpm.pid
error_log = /var/log/php-fpm/error.log
log_level = warning
emergency_restart_threshold = 10
emergency_restart_interval = 1m
process_control_timeout = 10s
daemonize = yes
EOphp_fpm_conf

    if [[ -f "/etc/php-fpm.d/www.conf" ]]; then
        rm -rf /etc/php-fpm.d/www.conf
    fi
cat >> "/etc/php-fpm.d/www.conf" << EOwww_conf
[www]
listen = /var/run/php-fpm.sock;
listen.backlog = -1
listen.allowed_clients = 127.0.0.1
listen.owner = nginx
listen.group = nginx
listen.mode = 0660
user = nginx
group = nginx
pm = dynamic
pm.max_children = ${PM_MAX_CHILDREN}
pm.start_servers = ${PM_START_SERVERS}
pm.min_spare_servers =  ${PM_MIN_SPARE_SERVER}
pm.max_spare_servers = ${PM_MAX_SPARE_SERVER}
pm.max_requests = ${PM_MAX_REQUEST}
request_terminate_timeout = 300
rlimit_files = 65536
rlimit_core = 0
;slowlog = /var/log/php-fpm/www-slow.log
chdir = /
php_admin_value[error_log] = /var/log/php-fpm/www-error.log
php_admin_flag[log_errors] = on
php_value[session.save_handler] = files
php_value[session.save_path]    = /var/lib/php/session
php_value[soap.wsdl_cache_dir]  = /var/lib/php/wsdlcache
php_admin_value[disable_functions] = exec,system,passthru,shell_exec,dl,show_source,posix_kill,posix_mkfifo,posix_getpwuid,posix_setpgid,posix_setsid,posix_setuid,posix_setgid,posix_seteuid,posix_setegid,posix_uname
;php_admin_value[disable_functions] = exec,system,passthru,shell_exec,proc_close,proc_open,dl,popen,show_source,posix_kill,posix_mkfifo,posix_getpwuid,posix_setpgid,posix_setsid,posix_setuid,posix_setgid,posix_seteuid,posix_setegid,posix_uname
;php_admin_value[open_basedir] = ${DEFAULT_DIR_WEB}/:/tmp/:/var/tmp/:/dev/urandom:/usr/share/php/:/dev/shm:/var/lib/php/sessions/
security.limit_extensions = .php
EOwww_conf

    if [[ ! -d "/var/lib/php/session" ]]; then
        mkdir -p /var/lib/php/session
    fi
    if [[ ! -d "/var/lib/php/wsdlcache" ]]; then
        mkdir -p /var/lib/php/wsdlcache
    fi
    if [[ ! -d "/var/log/php-fpm" ]]; then
        mkdir -p /var/log/php-fpm
    fi
    chown -R nginx:nginx /var/lib/php/session
    chown -R nginx:nginx /var/lib/php/wsdlcache
    chown -R nginx:nginx /var/log/php-fpm
    chmod 711 /var/lib/php/session
    chmod 711 /var/lib/php/wsdlcache
}


# Custom PHP Ini
hostvn_custom_ini(){
    if [[ -f "/etc/php.d/00-hostvn-custom.ini" ]]; then
        rm -rf /etc/php.d/00-hostvn-custom.ini
    fi
    cat > "/etc/php.d/00-hostvn-custom.ini" <<EOhostvn_custom_ini
date.timezone = Asia/Ho_Chi_Minh
max_execution_time = 90
max_input_time = 90
short_open_tag = On
realpath_cache_size = ${PHP_REAL_PATH_LIMIT}
realpath_cache_ttl = ${PHP_REAL_PATH_TTL}
memory_limit = ${MAX_MEMORY}M
upload_max_filesize = ${MAX_MEMORY}M
post_max_size = ${MAX_MEMORY}M
expose_php = Off
display_errors = Off
mail.add_x_header = Off
max_input_nesting_level = 128
max_input_vars = ${MAX_INPUT_VARS}
mysqlnd.net_cmd_buffer_size = 16384
mysqlnd.collect_memory_statistics = Off
mysqlnd.mempool_default_size = 16000
always_populate_raw_post_data=-1
;disable_functions=exec,system,passthru,shell_exec,proc_close,proc_open,dl,popen,show_source,posix_kill,posix_mkfifo,posix_getpwuid,posix_setpgid,posix_setsid,posix_setuid,posix_setgid,posix_seteuid,posix_setegid,posix_uname
EOhostvn_custom_ini
}

php_opcache(){
    if [[ -f "/etc/php.d/10-opcache.ini" ]]; then
        rm -rf /etc/php.d/10-opcache.ini
    fi
    cat > "/etc/php.d/10-opcache.ini" << EOphp_opcache
zend_extension=opcache.so
opcache.enable=1
opcache.memory_consumption=${OPCACHE_MEM}
opcache.interned_strings_buffer=8
opcache.max_wasted_percentage=5
opcache.max_accelerated_files=65407
opcache.revalidate_freq=180
opcache.fast_shutdown=0
opcache.enable_cli=0
opcache.save_comments=1
opcache.enable_file_override=1
opcache.validate_timestamps=1
opcache.blacklist_filename=/etc/php.d/opcache-default.blacklist
EOphp_opcache

    cat > "/etc/php.d/opcache-default.blacklist" << EOopcache_blacklist
/home/*/public_html/wp-content/plugins/backwpup/*
/home/*/public_html/wp-content/plugins/duplicator/*
/home/*/public_html/wp-content/plugins/updraftplus/*
EOopcache_blacklist
}

write_info(){
    sed -i '/php1_version=/d' "${FILE_INFO}"
    echo "php1_version=${php1_new}" >> "${FILE_INFO}"
}

_run(){
    set_var
    select_php_ver
    if [ -z "${php1_new}" ]; then
        printf "%s\n" "${RED}Cancel thay doi phien ban PHP.${NC}"
    else
        check_duplicate_php

        if [[ -z "${ALERT}" ]]; then
            remove_old_php

            install_php
            install_igbinary
            install_php_memcached
            install_php_redis
            php_global_config
            hostvn_custom_ini
            php_opcache
            systemctl restart php-fpm
            systemctl enable php-fpm
            write_info

            clear
            printf "%s\n" "${GREEN}Thay doi phien ban PHP success.${NC}"
        else
            clear
            printf "%s\n" "${ALERT}"
        fi
    fi
}

prompt_php1=""
php1_new=""
ALERT=""
confirm
if [[ "${prompt_php1}" =~ ^([yY])$ ]]; then
    _run
else
    printf "%s\n" "${GREEN}Ban da Cancel thay doi phien ban PHP.${NC}"
fi

menu_php