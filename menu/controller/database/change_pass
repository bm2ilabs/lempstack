#!/bin/bash

######################################################################
#           Auto Install & Optimize LEMP Stack on CentOS 7, 8        #
#                                                                    #
#                Author: Sanvv - HOSTVN Technical                    #
#                  Website: https://hostvn.vn                        #
#                                                                    #
#              Please do not remove copyright. Thank!                #
#  Please do not copy under any circumstance for commercial reason!  #
######################################################################

# shellcheck disable=SC1091
source /var/hostvn/menu/helpers/function

printf "%s==================%s\n" "${GREEN}" "${NC}"
printf "%sChange Password Mysql%s\n" "${GREEN}" "${NC}"
printf "%s==================%s\n" "${GREEN}" "${NC}"


input(){
    while true
    do
        echo "Username does not contain special characters and must be 5 characters in length."
        read -r -p "Enter a Mysql user [0 = Exit]: " db_user
        echo
        if validate_user "${db_user}"; then
            break
        else
            printf "%s\n"  "${RED}Value is not correct. Please re-enter.${NC}"
        fi
    done

    if [ "${db_user}" != "0" ]; then
        while true
        do
            read -r -p "Confirm the password change for the user ${db_user}? (y/n): " confirm
            echo
            if [[ "${confirm}" =~ ^([yY])$ || "${confirm}" =~ ^([nN])$ ]]; then
                break
            else
                printf "%s\n"  "${RED}Value is not correct. Please re-enter.${NC}"
            fi
        done
        password=$(gen_pass "$@")
    fi
}

validate(){
    if [ "${db_user}" = "admin" ]; then
        ALERT=$(printf "%s\n" "${RED}You must not change the password in the admin account.${NC}")
    fi
}

_change_pass(){
    if [[ "${confirm}" =~ ^([yY])$ ]]; then
        printf "%s\n" "${GREEN}Changing password...${NC}"
        sleep 1
        mysql -e "SET PASSWORD FOR '${db_user}'@'localhost' = PASSWORD('${password}')"

        string=$(grep -rnw "${USER_DIR}" -e "${db_user}" | cut -f1 -d':')
        if [ -n "${string}" ]; then
            for i in ${string} ; do
                sed -i '/db_password/d' "${i}"
                echo "db_password=${password}" >> "${i}"
            done
        fi

        clear
        printf "%s\n" "${GREEN}Change password success.${NC}"
        printf "%s\n" "${GREEN}The new password is:${NC} ${RED}${password}${NC}"
    else
        clear
        printf "%s\n" "${GREEN}Cancel changed the password.${NC}"
    fi
}

_run(){
    input "$@"

    if [ "${db_user}" == "0" ]; then
        clear
        printf "%s\n" "${GREEN}Cancel changed your password.${NC}"
    else
        validate

        if ! if_mysql_user_exists "${db_user}";
        then
            ALERT=$(printf "%s\n" "${RED}Mysql User not available.${NC}")
        fi

        if [ -z "${ALERT}" ]; then
            _change_pass
        else
            clear
            printf "%s\n" "${ALERT}"
        fi
    fi
}

ALERT=""
db_user=""
confirm=""
_run "$@"
menu_database