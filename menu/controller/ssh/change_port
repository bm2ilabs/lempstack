#!/bin/bash

######################################################################
#           Auto Install & Optimize LEMP Stack on CentOS 7, 8        #
#                                                                    #
#                Author: Sanvv - HOSTVN Technical                    #
#                  Website: https://hostvn.vn                        #
#                                                                    #
#              Please do not remove copyright. Thank!                #
#  Please do not copy under any circumstance for commercial reason!  #
######################################################################

printf "%s=================%s\n" "${GREEN}" "${NC}"
printf "%sThay đoi port SSH%s\n" "${GREEN}" "${NC}"
printf "%s=================%s\n" "${GREEN}" "${NC}"

set_var(){
    #https://www.howtoforge.com/tutorial/linux-grep-command/
    #https://stackoverflow.com/a/6284370
    current_port=$(grep -w "Port" /etc/ssh/sshd_config | cut -f2 -d" ")
    csf_port=$(grep -w "csf_port" "${FILE_INFO}" | cut -f2 -d'=')
    admin_port=$(grep -w "admin_port" "${FILE_INFO}" | cut -f2 -d'=')
    ftp_port=$(grep -w "ftp_port" "${FILE_INFO}" | cut -f2 -d'=')
}

input(){
    clear
    while true
    do
        read -r -p "Nhap vao port ban muon đoi [0 = Exit]: " port_new
        echo
        if [[ ${port_new} =~ ^-?[0-9]+$ ]]; then
            break
        else
            printf "%s\n" "${RED}Port khong dung dinh dang, vui long nhap lai.${NC}"
        fi
    done
}

check_port(){
    if [ -z "${port_new}" ]; then
        ALERT=$(printf "%s\n" "${RED}Ban chua nhap Port.${NC}")
    fi

    if [[ "${port_new}" == "${current_port}" ]]; then
        ALERT=$(printf "%s\n" "${RED}Port ban nhap trung vui Port SSH hien tai.${NC}")
    fi

    if [[ "${port_new}" == "${admin_port}" || "${port_new}" == "${csf_port}" || "${port_new}" == "${ftp_port}" ]]; then
        ALERT=$(printf "%s\n" "${RED}Port ban chon da duoc su dung. Vui long chon port khac.${NC}")
    fi

    check_se=$(semanage port -l | grep "${port_new}")
    if [[ "${port_new}" == "11211" || "${port_new}" == "6379" || -n  "${check_se}" ]]; then
        ALERT=$(printf "%s\n" "${RED}Port ban chon da duoc su dung. Vui long chon port khac.${NC}")
    fi

    if check_port_exists "${port_new}"; then
        ALERT=$(printf "%s\n" "${RED}Port da duoc su dung. Cancel thay doi port SSH.${NC}")
    fi
}

_change_port(){
    echo "Dang tien hanh thay đoi port SSH..."
    echo ""
    sleep 1
    if [[ ! -f "/etc/ssh/sshd_config.orig" ]]; then
        cp /etc/ssh/sshd_config /etc/ssh/sshd_config.orig
    fi

    sed -i "s/Port ${current_port}/Port ${port_new}/g" /etc/ssh/sshd_config
    sed -i "s/,${current_port}/,${port_new}/g" /etc/csf/csf.conf
    sed -i "s/22, ${current_port}/22, ${port_new}/g" /etc/csf/csf.conf
    sed -i '/ssh_port=/d' "${FILE_INFO}"
    echo "ssh_port=${port_new}" >> "${FILE_INFO}"
    if [[ "${current_port}" != "22" ]]; then
        semanage port -d -p tcp "${current_port}"
    fi
    semanage port -a -t ssh_port_t -p tcp "${port_new}"
    systemctl reload sshd.service
    csf -x
    csf -e
    clear
    printf "%s\n" "${GREEN}Da thay đoi Port SSH sang ${port_new} success.${NC}"
}

_run(){
    set_var
    check_port
    if [ -z "${ALERT}" ]; then
        _change_port
    else
        clear
        printf "%s\n" "${ALERT}"
    fi
}

ALERT=""
port_new=""
input
if [[ "${port_new}" == "0" ]]; then
    clear
    printf "%s\n" "${RED}Ban da chon Cancel thay doi Port.${NC}"
else
    _run
fi
menu_ssh