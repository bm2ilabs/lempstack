#!/bin/bash

######################################################################
#           Auto Install & Optimize LEMP Stack on CentOS 7, 8        #
#                                                                    #
#                Author: Sanvv - HOSTVN Technical                    #
#                  Website: https://hostvn.vn                        #
#                                                                    #
#              Please do not remove copyright. Thank!                #
#  Please do not copy under any circumstance for commercial reason!  #
######################################################################

# shellcheck disable=SC2154
# shellcheck disable=SC2002
source /var/hostvn/menu/helpers/function

printf "%s========================%s\n" "${GREEN}" "${NC}"
printf "%s Let's Encrypt Wildcard %s\n" "${GREEN}" "${NC}"
printf "%s========================%s\n" "${GREEN}" "${NC}"

validate(){
    check_nginx_status
    check_a_record "${domain}"
}

remove_old_ssl(){
    while true
    do
        read -r -p "Do you want to remove the old Let's Encrypt SSL certificate (y/n) ? " promt_remove_oldssl
        echo
        if [[ "${promt_remove_oldssl}" =~ ^([yY])$ || "${promt_remove_oldssl}" =~ ^([nN])$ ]]; then
            break
        else
            printf "%s\n"  "${RED}Value is not correct. Please re-enter.${NC}"
        fi
    done
    
    if [[ ${promt_remove_oldssl} =~ ^([yY])$ ]]; then
        certbot-auto revoke --cert-path /etc/letsencrypt/live/"${domain}"/cert.pem
        certbot-auto delete --cert-name "${domain}"
    fi
}

sign_ssl(){
    admin_email=$(grep -w "admin_email" "${FILE_INFO}" | cut -f2 -d'=');
    if [ -f "/etc/letsencrypt/live/${domain}/cert.pem" ]; then
        remove_old_ssl
        certbot certonly --preferred-challenges=dns --email "${admin_email}" --agree-tos \
                --no-bootstrap --manual-public-ip-logging-ok -d "${domain}" -d "*.${domain}"
    else
        certbot certonly --nginx --preferred-challenges=dns --email "${admin_email}" --agree-tos \
                --no-bootstrap --manual-public-ip-logging-ok -d "${domain}" -d "*.${domain}"
    fi
}

auto_renew(){
    cron_exists=$(crontab -l | grep -w 'certbot-auto')
    if [ -z "${cron_exists}" ]; then
        crontab -l > certbot
        echo "0 3 * * * /usr/local/bin/certbot-auto renew && service nginx restart >/dev/null 2>&1" >> certbot
        crontab certbot
        rm -rf certbot
    fi
}

_run(){
    validate

    if [ -z "${ALERT}" ]; then
        sign_ssl
        auto_renew
        #sed -i "s/listen 443 ssl;/listen 443 ssl http2;/g" "${VHOST_DIR}"/"${domain}".conf
        sleep 2
        systemctl restart nginx.service
    else
        clear
        printf "%s\n" "${ALERT}"
    fi
}

ALERT=""
promt_remove_oldssl=""
domain=""

select_domain
if [ -n "${domain}" ]; then
    _run
else
    clear
    printf "%s\n" "${RED}You have chosen to cancel the action.${NC}"
fi

menu_letencrypt

