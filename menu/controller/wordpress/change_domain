#!/bin/bash

######################################################################
#           Auto Install & Optimize LEMP Stack on CentOS 7, 8        #
#                                                                    #
#                Author: Sanvv - HOSTVN Technical                    #
#                  Website: https://hostvn.vn                        #
#                                                                    #
#              Please do not remove copyright. Thank!                #
#  Please do not copy under any circumstance for commercial reason!  #
######################################################################

# shellcheck disable=SC2154
# shellcheck disable=SC2034
source /var/hostvn/menu/helpers/function
ALERT=""
domain=""

set_var(){
    #https://www.howtoforge.com/tutorial/linux-grep-command/
    #https://stackoverflow.com/a/6284370
    username=$(grep -w "username" "${USER_DIR}/.${domain}.conf" | cut -f2 -d'=');
    php_mode="$(grep "php_mode" "${USER_DIR}/.${domain}.conf" | cut -f2 -d'=')"
    db_name=$(grep -w "db_name" "${USER_DIR}/.${domain}.conf" | cut -f2 -d'=');
    rewrite="include /etc/nginx/rewrite/wordpress.conf;"
    plugin_cache="$(grep -w "plugin_cache" "${USER_DIR}/.${domain}.conf" | cut -f2 -d'=')"
}

input(){
    false
    while [ $? -eq 1 ]
    do
        read -r -p "Enter domain (No www) [0 = Exit]: " new_domain
        if [ "${new_domain}" == "0" ]; then
            new_domain=0
            break
        else
            new_domain=$(echo "${new_domain}" | tr '[:upper:]' '[:lower:]')
            echo "${new_domain}" | grep -q "\."
            if [ $? -eq 0 ]; then
                "${BASH_DIR}"/menu/validate/check_value domain "${new_domain}"
                if [[ $? -eq 1 ]]; then
                    clear
                    printf "%s\n" "${RED}The domain name you entered is incorrect, please re-enter.${NC}"
                    false
                fi
            else
                clear
                printf "%s\n" "${RED}The domain name you entered is incorrect, please re-enter.${NC}"
                false
            fi
        fi
    done
}

backup_confirm(){
    while true
    do
        read -r -p "Ban co muon backup du lieu truoc khi doi ten mien khong? (y/n) " promt_backup
        echo
        if [[ "${promt_backup}" =~ ^([yY])$ || "${promt_backup}" =~ ^([nN])$ ]]; then
            break
        else
            printf "%s\n" "${RED}The value you entered is not correct, please re-enter.${NC}"
        fi
    done
}

_backup(){
    cd_dir /home/"${username}"/"${domain}"/public_html
    if [[ -f "/home/backup/${CURRENT_DATE}/${domain}/${db_name}.sql" ]]; then
        rm -rf /home/backup/"${CURRENT_DATE}"/"${domain}"/"${db_name}".sql
    fi

    if [[ ! -d "/home/backup/${CURRENT_DATE}/${domain}" ]]; then
        mkdir -p /home/backup/"${CURRENT_DATE}"/"${domain}"
    fi
    wp db export --allow-root /home/backup/"${CURRENT_DATE}"/"${domain}"/"${db_name}".sql
}

change_path(){
    mv /home/"${username}"/"${domain}" /home/"${username}"/"${new_domain}"
}

change_vhost(){
    mv /etc/nginx/conf.d/"${domain}".conf /etc/nginx/conf.d/"${new_domain}".conf
    sed -i "s/${domain}/${new_domain}/g" /etc/nginx/conf.d/"${new_domain}".conf
}

change_phpconfig(){
    php_conf_path="/etc/php-fpm.d"
    if [[ "${php2_release}" == "yes" && "${php_mode}" == "2" ]]; then
        php_conf_path="/etc/opt/remi/${php2_version}/php-fpm.d"
        if [[ "${php2_version}" == "php56" ]]; then
            php_conf_path="/opt/remi/${php2_version}/root/etc/php-fpm.d"
        fi
    fi

    mv "${php_conf_path}"/"${domain}".conf "${php_conf_path}"/"${new_domain}".conf
    sed -i "s/${domain}/${new_domain}/g" "${php_conf_path}"/"${new_domain}".conf
}

change_in_db(){
    cd_dir /home/"${username}"/"${new_domain}"/public_html
    wp search-replace --allow-root "${domain}" "${new_domain}"
}

change_user_config(){
    mv "${USER_DIR}"/."${domain}".conf "${USER_DIR}"/."${new_domain}".conf
}

_run(){
    check_wpconfig "${username}" "${domain}"

    if [[ "${domain}" == "${new_domain}" ]]; then
        ALERT=$(printf "%s\n" "${RED}Ten mien moi cua ban giong ten mien cu. Cancel thay doi ten mien.${NC}")
    fi

    if [ -z "${ALERT}" ]; then
        change_path
        change_user_config
        change_vhost
        change_phpconfig
        change_in_db
        if [ -f "${WORDPRESS_CRON_DIR}/${domain}" ]; then
            rm -rf "${WORDPRESS_CRON_DIR}"/"${domain:?}"
            touch "${WORDPRESS_CRON_DIR}"/"${new_domain}"
        fi
        restart_service
        clear
        printf "%s\n" "${GREEN}Doi ten mien success.${NC}"
    else
        clear
        printf "%s\n" "${ALERT}"
    fi
}

ALERT=""
domain=""
new_domain=""
promt_backup=""
select_domain

if [ -n "${domain}" ]; then
    set_var
    input
    if [ "${new_domain}" == "0" ]; then
        menu_wp
    else
        backup_confirm
        if [[ "${promt_backup}" =~ ^([yY])$ ]]; then
            _backup
        fi
        _run
        menu_wp
    fi
else
    clear
    printf "%s\n" "${RED}You have chosen to cancel the action${NC}"
    menu_wp
fi