#!/bin/bash

######################################################################
#           Auto Install & Optimize LEMP Stack on CentOS 7, 8        #
#                                                                    #
#                Author: Sanvv - HOSTVN Technical                    #
#                  Website: https://hostvn.vn                        #
#                                                                    #
#              Please do not remove copyright. Thank!                #
#  Please do not copy under any circumstance for commercial reason!  #
######################################################################

# shellcheck disable=SC2154
# shellcheck disable=SC1091
source /var/hostvn/menu/helpers/function

confirm_restore(){
    while true
    do
        read -r -p "Ban muon khoi phuc du lieu ? (y/n) " promt_restore
        echo
        if [[ "${promt_restore}" =~ ^([yY])$ || "${promt_restore}" =~ ^([nN])$ ]]; then
            break
        else
            printf "%s\n"  "${RED}Value is not correct. Please re-enter.${NC}"
        fi
    done
}

set_var(){
    #https://www.howtoforge.com/tutorial/linux-grep-command/
    #https://stackoverflow.com/a/6284370
    username=$(grep -w "username" "${USER_DIR}/.${domain}.conf" | cut -f2 -d'=')
    db_name=$(grep -w "db_name" "${USER_DIR}/.${domain}.conf" | cut -f2 -d'=')
}

select_backup(){
    clear
    echo "Chon ngay ban muon khoi phuc: "
    dates=()
    selects=$(rclone lsf "${remote}":"${IPADDRESS}")
    for entry in ${selects}; do
        select=${entry///}
        dates+=("${select}")
    done
    PS3="Enter your choice [0 = Exit]: "
    select date in "${dates[@]}"
    do
        date=${date}
        break
    done
}

choose_domain(){
    clear
    echo "Chon ten mien ban muon khoi phuc: "
    selects=$(rclone lsf "${remote}":"${IPADDRESS}"/"${date}")
    for entry in ${selects}; do
        select=${entry///}
        domains+=("${select}")
    done
    PS3="Enter your choice [0 = Exit]: "
    select domain in "${domains[@]}"
    do
        domain=${domain}
        break
    done
}

download_backup(){
    if [ -d "/home/backup/${date}/${domain}" ]; then
        rm -rf /home/backup/"${date}"/"${domain}"
    else
        mkdir -p /home/backup/"${date}"/"${domain}"
    fi
    rclone copy "${remote}:/${IPADDRESS}/${date}/${domain}" /home/backup/"${date}"/"${domain}"
}

_restore_source(){
    if [[ ! -d "/home/${username}/${domain}/public_html" ]]; then
        mkdir -p /home/"${username}"/"${domain}"/public_html
    fi
    rm -rf /home/"${username}"/"${domain}"/public_html/*
    tar xvzf /home/backup/"${date}"/"${domain}"/"${domain}".tar.gz -C /home/"${username}"/"${domain}"/
    chown -R "${username}":"${username}" /home/"${username}"
}

select_db(){
    clear
    cd_dir /home/backup/"${date}"/"${domain}"
    sql_files=()
    for entry in *.{sql,sql.gz}; do
        if [ -f "${entry}" ]; then
            sql_files+=("${entry}")
        fi
    done

    echo "Chon file database muon khoi phuc"
    PS3="Enter your selection [0 = Exit]: "
    select opt in "${sql_files[@]}"
    do
        sql=$opt
        break
    done
}

_restore_db(){
    mysql -uadmin -p"${mysql_pwd}" "${db_name}" < "${sql}"
}

_run(){
    select_backup
    if [ -z "${date}" ]; then
        clear
        printf "%s\n" "${RED}Ban da chon Cancel khoi phuc du lieu.${NC}"
    else
        choose_domain

        if [ -z "${domain}" ]; then
            clear
            printf "%s\n" "${RED}Ban da chon Cancel khoi phuc du lieu.${NC}"
        else
            if [ ! -f "${USER_DIR}/.${domain}.conf"  ]; then
                ALERT=$(printf "%s\n" "${RED}Ten mien nay does not exist tren VPS.${NC}")
            else
                set_var
                if ! if_db_exists "${db_name}"; then
                    ALERT=$(printf "%s\n" "${RED}Database does not exist.${NC}")
                fi
            fi

            if [[ -z "${ALERT}" ]]; then
                clear
                printf "%s\n" "${GREEN}Dang download backup tu Google Drive....${NC}"
                download_backup
                select_db
                if [ -z "${sql}" ]; then
                    clear
                    printf "%s\n" "${RED}Ban da chon Cancel khoi phuc du lieu.${NC}"
                else
                    _restore_source
                    empty_db
                    _restore_db
                    rm -rf /home/backup/"${date}"/"${domain}"
                    clear
                    printf "%s\n" "${GREEN}Khoi phuc du lieu success.${NC}"
                fi
            else
                clear
                printf "%s\n" "${ALERT}"
            fi
        fi
    fi
}

if [ -f "/root/.config/rclone/rclone.conf" ]; then
    ALERT=""
    remote=""
    domain=""
    promt_restore=""
    sql=""
    confirm_restore
    if [[ "${promt_restore}" =~ ^([yY])$ ]]; then
        if [[ $(ls -A "${USER_DIR}") ]]; then
            select_remote
            if [ -z "${remote}" ]; then
                clear
                printf "%s\n" "${RED}Ban da chon Cancel khoi phuc du lieu.${NC}"
            else
                _run
            fi
        else
            printf "%s\n" "${RED}Khong co ten mien nao tren VPS.${NC}"
        fi
    else
        clear
        printf "%s\n" "${RED}Ban da chon Cancel khoi phuc du lieu.${NC}"
    fi
else
    printf "%s\n" "${RED}Ban chua cau hinh ket noi voi Google Drive.${NC}"
fi
menu_ggdrive