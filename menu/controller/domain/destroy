#!/bin/bash

######################################################################
#           Auto Install & Optimize LEMP Stack on CentOS 7, 8        #
#                                                                    #
#                Author: Sanvv - HOSTVN Technical                    #
#                  Website: https://hostvn.vn                        #
#                                                                    #
#              Please do not remove copyright. Thank!                #
#  Please do not copy under any circumstance for commercial reason!  #
######################################################################

# shellcheck disable=SC2154
# shellcheck disable=SC1091
source /var/hostvn/menu/helpers/function

printf "%s==========%s\n" "${GREEN}" "${NC}"
printf "%sDelete the Domain%s\n" "${GREEN}" "${NC}"
printf "%s==========%s\n" "${GREEN}" "${NC}"

set_var(){
    #https://www.howtoforge.com/tutorial/linux-grep-command/
    #https://stackoverflow.com/a/6284370
    pureftpd_status="$(pgrep -f pure-ftpd)"
    db_name=$(grep -w "db_name" "${USER_DIR}/.${domain}.conf" | cut -f2 -d'=');
    db_user=$(grep -w "db_user" "${USER_DIR}/.${domain}.conf" | cut -f2 -d'=');
    username=$(grep -w "username" "${USER_DIR}/.${domain}.conf" | cut -f2 -d'=');
    php_mode=$(grep -w "php_mode" "${USER_DIR}/.${domain}.conf" | cut -f2 -d'=');
    vhost_config="${VHOST_DIR}/${domain}.conf"
    php_config_file="/etc/php-fpm.d/${domain}.conf"
}

confirm(){
    printf "%s\n" "${RED}You really want to delete ${domain}? ${NC}"
    PS3="Enter your selection [1-2]"
    options=("Yes" "No")
    select opt in "${options[@]}"
    do
        case $opt in
            "Yes") confirm_destroy_domain="y"; break;;
            "No") confirm_destroy_domain="n"; break;;
            *) printf "%s\n" "${RED}You entered incorrectly, please re-enter${NC}";;
        esac
    done

    if [[ "${confirm_destroy_domain}" =~ ^([yY])$ ]]; then
        echo "Ban co muon xoa database ${db_name}? (y/n): "
        PS3="Enter your selection [1-2]"
        options=("Yes" "No")
        select opt in "${options[@]}"
        do
            case $opt in
                "Yes") confirm_destroy_db="y"; break;;
                "No") confirm_destroy_db="N"; break;;
                *) printf "%s\n" "${RED}You entered incorrectly, please re-enter${NC}";;
            esac
        done
    else
        ALERT=$(printf "%s\n" "${RED}You chose Cancel to delete the domain. Bye bye...${NC}")
    fi
}

destroy_user(){
    if if_user_exists "${username}"; then
       userdel -f -r "$1" >/dev/null 2>&1
    fi
}

destroy_ftp_user(){
    if if_pureftpd_user_exists "${username}"; then
        pure-pw userdel "$1" >/dev/null 2>&1
        pure-pw mkdb >/dev/null 2>&1
    fi
}

_destroy_db(){
    mysql -e "REVOKE ALL PRIVILEGES, GRANT OPTION FROM '${db_user}'@'localhost'"
    mysql -e "DROP USER IF EXISTS '${db_user}'@'localhost'"
    mysql -e "DROP DATABASE IF EXISTS ${db_name}"
}

remove_path(){
    if [[ "${php_mode}" -eq 2 ]]; then
        php_config_file="/etc/opt/remi/${php2_version}/php-fpm.d/${domain}.conf"
        if [[ "${php2_version}" == "php56" ]]; then
            php_config_file="/opt/remi/${php2_version}/root/etc/php-fpm.d/${domain}.conf"
        fi
    fi

    if [ -d "/home/${username}" ]; then
        rm -rf /home/"${username:?}"
    fi
    if [ -f "${vhost_config}" ]; then
        rm -rf "${vhost_config}"
    fi
    if [ -f "${USER_DIR}/.${domain}.conf" ]; then
        rm -rf "${USER_DIR}"/."${domain}".conf
    fi
    if [ -f "${php_config_file}" ]; then
        rm -rf "${php_config_file}"
    fi
}

_run(){
    select_domain
    if [ -z "${domain}" ]; then
        clear
        printf "%s\n" "${RED}You have chosen to cancel the action${NC}"
    else
        confirm
        if [ -z "${ALERT}" ]; then
            set_var
            if [[ "${confirm_destroy_db}" =~ ^([yY])$ ]]; then
                _destroy_db
            fi

            destroy_user "$username"

            if [ -n "${pureftpd_status}" ]; then
                destroy_ftp_user "$username"
            fi

            remove_path
            restart_service
            clear
            printf "%s\n" "${GREEN}Delete Domain success.${NC}"
        else
            clear
            printf "%s\n" "${ALERT}"
        fi
    fi
}

ALERT=""
domain=""
confirm_destroy_domain="n"
confirm_destroy_db="n"
_run
menu_domain