#!/bin/bash

######################################################################
#           Auto Install & Optimize LEMP Stack on CentOS 7, 8        #
#                                                                    #
#                Author: Sanvv - HOSTVN Technical                    #
#                  Website: https://hostvn.vn                        #
#                                                                    #
#              Please do not remove copyright. Thank!                #
#  Please do not copy under any circumstance for commercial reason!  #
######################################################################

CHOICE=1

printf "%s==============================================%s\n" "${GREEN}" "${NC}"
printf "%s                Manage cronjob                %s\n" "${GREEN}" "${NC}"
printf "%s==============================================%s\n" "${GREEN}" "${NC}"

while [ "${CHOICE}" != "0" ]
do
    printf "%s1. Check out the Cronjob on VPS%s\n" "${GREEN}" "${NC}"
    printf "%s2. Create Cronjob auto renew Let's Encrypt%s\n" "${GREEN}" "${NC}"
    printf "%s3. Create Cronjob automatically backup at VPS%s\n" "${GREEN}" "${NC}"
    printf "%s4. Create Cronjob automatically backup to Google Drive%s\n" "${GREEN}" "${NC}"
    printf "%s5. Create Cronjob custom%s\n" "${GREEN}" "${NC}"
    printf "%s6. XÃ³a cronjob%s\n" "${GREEN}" "${NC}"
    printf "%s =============================================%s\n" "${GREEN}" "${NC}"
    read -r -p " Enter your selection [0 = Exit] " CHOICE
    if [ -z "${CHOICE}" ]
    then
        CHOICE=1
        continue
    fi
    case ${CHOICE} in
        1)
            echo ""
            cron=$(crontab -l)
            printf "${RED}${cron}%s\n"
            echo ""
            ;;
        2)
            cron_exists=$(crontab -l | grep -w 'certbot-auto')
            if [ -z "${cron_exists}" ]; then
                crontab -l > le
                echo "0 3 * * * /usr/local/bin/certbot-auto renew >/dev/null 2>&1" >> le
                crontab le
                rm -rf le
                clear
                printf "%s\n" "${GREEN}Create Cronjob success.${NC}"
                echo ""
            else
                clear
                printf "${RED}Cronjob already exist.%s\n"
                echo ""
            fi

            menu_cronjob
            ;;
        3) clear; cron_backup_local ;;
        4) clear; cron_backup_gg ;;
        5)
            clear
            printf "${RED}Press Ctrl + C de Cancel Create Cronjob%s\n"
            echo ""
            read -r -p "Enter a minute (Leave it blank if running every minutes): " minutes
            read -r -p "Enter ahour (Leave it blank if running every hour): " hours
            read -r -p "Enter a day (Leave it blank if running every day): " days
            read -r -p "Enter a month (Leave it blank if running every month): " months
            read -r -p "Enter a week (Leave it blank if running every weekly): " weekday
            read -r -p "Enter a command: " command

            if [[ -z "${minutes}" ]]; then
                minutes="*"
            fi

            if [[ -z "${hours}" ]]; then
                hours="*"
            fi

            if [[ -z "${days}" ]]; then
                days="*"
            fi

            if [[ -z "${months}" ]]; then
                months="*"
            fi

            if [[ -z "${weekday}" ]]; then
                weekday="*"
            fi

            cron_exists=$(crontab -l | grep -w "${command}")
            if [ -z "${cron_exists}" ]; then
                crontab -l > cu_cron
                echo "${minutes} ${hours} ${days} ${months} ${weekday} ${command} >/dev/null 2>&1" >> cu_cron
                crontab cu_cron
                rm -rf cu_cron
                clear
                printf "%s\n" "${GREEN}Create Cronjob success.${NC}"
                echo ""
            else
                clear
                printf "%s\n" "${GREEN}Cronjob already exist.${RED}"
                echo ""
            fi

            menu_cronjob
            ;;
        6) clear; cron_destroy ;;
        0) clear; menu_primary ;;
        *) clear; printf "%s\n" "${GREEN}Your choice is not correct. Please choose again.${RED}";;
    esac
done